
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.РегистрБухгалтерии.Записывать = Истина;
	
#Область СебестоимостьПоСтоимости	
	Если ЮрЛицо.УчетСтоимости = Перечисления.УчетСтоимости.Себестоимость Тогда
		
		// Проверка наличия на складе
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст = "ВЫБРАТЬ
		|	Номенклатура,
		|	ЦенаПриобретения КАК ЦенаПриобретения,
		|	Количество КАК Количество,
		|	Сумма КАК Сумма
		|ПОМЕСТИТЬ ДокТЧ
		|ИЗ
		|	Документ.СписаниеМатериалов.Материалы КАК СписаниеМатериаловМатериалы
		|ГДЕ
		|	Ссылка = &Ссылка
		|;
		|ВЫБРАТЬ * ИЗ ДокТЧ";
		
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Движения.СтоимостьТоваровПоФакту.Записывать = Истина;
		
		Пока Выборка.Следующий() Цикл
			Движение = Движения.СтоимостьТоваровПоФакту.ДобавитьРасход();
			Движение.Период = Дата;
			Движение.ЮрЛицо = ЮрЛицо;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Цена = Выборка.ЦенаПриобретения;
			Движение.Склад = Склад;
			Движение.Количество = Выборка.Количество;
			Движение.Стоимость = Выборка.Сумма;
		КонецЦикла;
		
		Движения.СтоимостьТоваровПоФакту.БлокироватьДляИзменения = Истина;
		Движения.Записать();
		
		Запрос.Текст = "ВЫБРАТЬ
		|  ОстаткиТоваровОстатки.Номенклатура,
		|  ОстаткиТоваровОстатки.Цена,
		|  ОстаткиТоваровОстатки.КоличествоОстаток
		|ИЗ
		|  РегистрНакопления.СтоимостьТоваровПоФакту.Остатки(&ВремяОстатков, Склад = &Склад
		|    И ЮрЛицо = &ЮрЛицо И Номенклатура В
		|      (ВЫБРАТЬ 
		|		  ДокТЧ.Номенклатура
		|       ИЗ
		|         ДокТЧ КАК ДокТЧ)) КАК ОстаткиТоваровОстатки
		|ГДЕ
		|  ОстаткиТоваровОстатки.КоличествоОстаток < 0";
		
		
		// Условие по времени, чтобы выбирались остатки после проведения документа. 
		
		Граница = Новый Граница(МоментВремени(),ВидГраницы.Включая);
		Запрос.УстановитьПараметр("ВремяОстатков", Граница);
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("ЮрЛицо", ЮрЛицо);
		
		
		РезультатЗапроса = Запрос.Выполнить();
		
		// Сообщим, чего не хватает
		Если НЕ ЮрЛицо.УходВМинус И НЕ РезультатЗапроса.Пустой() Тогда 
			
			Отказ = Истина;
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				Сообщить("Мало товара " + Выборка.Номенклатура + " с ценой покупки " + Выборка.Цена + ", нужно ещё " + (-Выборка.КоличествоОстаток));
			КонецЦикла
			
		КонецЕсли;
		
		// Если не хватает товара, прекращаем проведение
		Если Отказ Тогда 
			Возврат;
		КонецЕсли;
		
		Для каждого СТР Из Материалы Цикл
			
			Проводка = Движения.РегистрБухгалтерии.Добавить();
			Проводка.Период = Дата;
			Проводка.ЮрЛицо = ЮрЛицо;
			Проводка.СчетДт = СчетСписания;
			Проводка.СчетКт = СТР.СчетУчета;
			Проводка.Сумма = СТР.Сумма;
			Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = СТР.Номенклатура;
			Проводка.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склады] = Склад;
			Проводка.КоличествоКт = СТР.Количество;
		
		КонецЦикла;

		
	КонецЕсли;
#КонецОбласти

	Движения.РегистрБухгалтерии.Записывать = Истина;
	
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, Режим)
	
	//ДЗ_4 это сделать регистр расчётов с покупателями	
#Область ДЗ_4	
	Движения.РасчетыСПокупателями.Записывать = Истина;
	Движение = Движения.РасчетыСПокупателями.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.СуммаДолга =  Товары.Итог("Сумма");
#КонецОбласти
	
	//ТЗ = Новый ТаблицаЗначений;
	//ТЗ = Товары.Выгрузить();
	//ТЗ.Свернуть("Номенклатура", "Количество");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = "ВЫБРАТЬ
	|Номенклатура,
	|СУММА(Количество)
	|ПОМЕСТИТЬ ДокТЧ
	|ИЗ
	|Документ.РасходнаяНакладная.Товары КАК РасходнаяНакладнаяТовары
	|ГДЕ
	|Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|Номенклатура
	|;
	|ВЫБРАТЬ * ИЗ ДокТЧ";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	//ставим маркер записи в регистр остатков
	Движения.ОстаткиТоваров.Записывать = Истина;
	
	//формируем движение с остатками
	Пока Выборка.Следующий() Цикл 
		
		Движение = Движения.ОстаткиТоваров.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Склад = Склад;
		Движение.Количество = Выборка.Количество;
		                            	
	КонецЦикла; 
	
	//Сейчас пойдёт обусловленное проведение - чтобы не ушли в минус. Сначала запишу  
	//обороты, сверю и в случае чего сделаю отмену проведения.
	//&Склад = Склад для отбора по складам.

	//ставим блокировку, пишем в регистры остатков и взаиморасчётов
	
	Движения.ОстаткиТоваров.БлокироватьДляИзменения = Истина;
	Движения.Записать();
	
	//Убираем запрос, чтобы не убивать ДокТЧ
	//Запрос = Новый Запрос;
	
	//получаем остатки из регистра
	Запрос.Текст = "ВЫБРАТЬ
	|  ОстаткиТоваровОстатки.Номенклатура,
	|  ОстаткиТоваровОстатки.КоличествоОстаток
	|ИЗ
	//|  РегистрНакопления.ОстаткиТоваров.Остатки(&МоментВремени) КАК ОстаткиТоваровОстатки
	|  РегистрНакопления.ОстаткиТоваров.Остатки(&МоментВремени, Склад = &Склад
	|    И Номенклатура В
	|      (ВЫБРАТЬ 
	|		  ДокТЧ.Номенклатура
	|       ИЗ
	|         ДокТЧ КАК ДокТЧ)) КАК ОстаткиТоваровОстатки
	|ГДЕ
	|  ОстаткиТоваровОстатки.КоличествоОстаток < 0";
	
	//А тут уже условие по времени, чтобы можно было проводить документы задним числом, даже если по итогу уйдём в минус. 
	//Более подробно в конспекте.
	Граница = Новый Граница(МоментВремени(),ВидГраницы.Включая);
	Запрос.УстановитьПараметр("МоментВремени", Граница);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	//проверяем наличие нужного количества товара на складе
	Если НЕ РезультатЗапроса.Пустой() Тогда 
		Отказ = Истина;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
  			Сообщить("Мало товара " + Выборка.Номенклатура + " нужно ещё " + (-Выборка.КоличествоОстаток));
		КонецЦикла

	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	//мы сначала читаем остатки а потом пишем движения. соответственно заблокировать мы не можем. 
	//Потому что нет движений нет инфы о том, что будет записано. Ставим блокировку сами
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СтоимостьТоваров");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	Блокировка.Заблокировать();
	//если перепроводится
	Движения.СтоимостьТоваров.БлокироватьДляИзменения = Истина;
	
	
	//Т.к. оперативный и удаляется только при отмене проведения, то пишем пустой регистр пока, чтобы убрать старые движения.
	//Если РежимПроведенияДокумента.Оперативный Тогда 
	Движения.СтоимостьТоваров.Записать();
	//КонецЕсли;
	//Теперь старые движения убраны и система начнёт расчёт 
	
	
	Запрос.Текст = "ВЫБРАТЬ
	                 |	СтоимостьТоваровОстатки.Номенклатура КАК Номенклатура,
					 |  СтоимостьТоваровОстатки.Партия КАК Партия,
	                 |	СтоимостьТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток,
	                 |	СтоимостьТоваровОстатки.СтоимостьОстаток КАК СтоимостьОстаток
	                 |ПОМЕСТИТЬ Остатки
	                 |ИЗ
	                 |	РегистрНакопления.СтоимостьТоваров.Остатки(&МоментВремени,
	                 |			Номенклатура В
	                 |				(ВЫБРАТЬ
	                 |					ДокТЧ.Номенклатура КАК Номенклатура
	                 |				ИЗ
	                 |					ДокТЧ КАК ДокТЧ)) КАК СтоимостьТоваровОстатки
	                 |;
	                 |
	                 |////////////////////////////////////////////////////////////////////////////////
	                 |ВЫБРАТЬ
	                 |	ДокТЧ.Номенклатура КАК Номенклатура,
					 |	ДокТЧ.Количество КАК Количество,
	                 |  Остатки.Партия КАК Партия,
	                 |	ЕстьNULL(Остатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	                 |	Остатки.СтоимостьОстаток КАК СтоимостьОстаток
	                 |ИЗ
	                 |	ДокТЧ КАК ДокТЧ
	                 |		ЛЕВОЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	                 |		ПО ДокТЧ.Номенклатура = Остатки.Номенклатура
					 |УПОРЯДОЧИТЬ ПО
					 |	Остатки.Партия.МоментВремени //FIFO
					 |ИТОГИ
					 |	МИНИМУМ(Количество),
					 |	СУММА(КоличествоОстаток)
					 |ПО
					 |	Номенклатура";
	
	Запрос.УстановитьПараметр("МоментВремени",МоментВремени());
	Результат = Запрос.Выполнить();
	ВыборкаТовар = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТовар.Следующий() Цикл
		
		Если ВыборкаТовар.КоличествоОстаток < ВыборкаТовар.Количество Тогда 
			Сообщить("Проблемы со складом - товара нет вообще.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		ВыборкаПартия = ВыборкаТовар.Выбрать();
		ОсталосьСписать = ВыборкаТовар.Количество;
		
		Пока ВыборкаПартия.Следующий() И ОсталосьСписать <> 0 Цикл
			Списать = МИН(ОсталосьСписать, ВыборкаПартия.КоличествоОстаток);
			
			
			Себестоимость = Списать / ВыборкаПартия.КоличествоОстаток * ВыборкаПартия.СтоимостьОстаток;
			
			Движение = Движения.СтоимостьТоваров.ДобавитьРасход();
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Партия = ВыборкаПартия.Партия;
			Движение.Количество = Списать;
			Движение.Стоимость = Себестоимость;
			
			ОсталосьСписать = ОсталосьСписать - Списать;
		КонецЦикла;
		
	КонецЦикла;
	Движения.СтоимостьТоваров.Записывать = Истина;	
	  
	
КонецПроцедуры
